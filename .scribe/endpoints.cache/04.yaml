## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Member Management'
description: ''
endpoints:
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/groups/{group_id}/members/{user_id}'
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a member from a group'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group_id:
        name: group_id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      group_id: 1
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/groups/{group_id}/members'
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List group members'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group_id:
        name: group_id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      group_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"Dr. Clarice Velasques Neto","email":"aparecida.dearruda@example.com","role":"admin"},{"id":3,"name":"Marina da Silva Jr.","email":"otavio90@example.net","role":"member"},{"id":4,"name":"Michele Pietra Duarte","email":"demian.grego@example.org","role":"member"},{"id":7,"name":"M\u00e1ximo Hugo Rosa Jr.","email":"nelson97@example.net","role":"member"},{"id":8,"name":"Srta. Lorena Danielle Furtado","email":"dominato.daniela@example.org","role":"member"},{"id":9,"name":"Srta. Graziela C\u00edntia Sanches","email":"irene.bittencourt@example.net","role":"member"},{"id":11,"name":"Scribe Doc User","email":"scribe@example.com","role":"member"}],"links":{"first":"http:\/\/localhost\/api\/v1\/groups\/1\/members?page=1","last":"http:\/\/localhost\/api\/v1\/groups\/1\/members?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Anterior","page":null,"active":false},{"url":"http:\/\/localhost\/api\/v1\/groups\/1\/members?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Pr\u00f3ximo &raquo;","page":null,"active":false}],"path":"http:\/\/localhost\/api\/v1\/groups\/1\/members","per_page":15,"to":7,"total":7}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/groups/{group_id}/members/{user_id}'
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update a member's role"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group_id:
        name: group_id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      group_id: 1
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: ''
        required: true
        example: admin
        type: string
        enumValues:
          - admin
          - member
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      role: admin
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/groups/{group_id}/invitations'
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send an invitation to a group'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group_id:
        name: group_id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      group_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'O campo value deve ser um endereço de e-mail válido. O campo value não pode ser superior a 255 caracteres.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
    fileParameters: []
    responses:
      -
        status: 201
        content: ''
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/invitations/pending
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List pending invitations'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/invitations/{invitation_id}/accept'
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Accept a pending invitation'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      invitation_id:
        name: invitation_id
        description: 'The ID of the invitation.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      invitation_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/invitations/{invitation_id}/decline'
    metadata:
      groupName: 'Member Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Decline a pending invitation'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      invitation_id:
        name: invitation_id
        description: 'The ID of the invitation.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      invitation_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
