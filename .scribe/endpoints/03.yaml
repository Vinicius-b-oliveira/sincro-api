name: 'Group Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/groups
    metadata:
      groupName: 'Group Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List my groups'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"quas provident","description":"Nobis et consectetur sit odio. Sed quibusdam cupiditate voluptatem quis sed corrupti.","owner":{"id":1,"name":"Dr. Clarice Velasques Neto","email":"aparecida.dearruda@example.com","favorite_group_id":null,"created_at":"2025-10-16T19:15:36+00:00"},"members_count":7,"created_at":"2025-10-16T19:15:36+00:00"}],"links":{"first":"http:\/\/localhost\/api\/v1\/groups?page=1","last":"http:\/\/localhost\/api\/v1\/groups?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Anterior","page":null,"active":false},{"url":"http:\/\/localhost\/api\/v1\/groups?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Pr\u00f3ximo &raquo;","page":null,"active":false}],"path":"http:\/\/localhost\/api\/v1\/groups","per_page":15,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/groups
    metadata:
      groupName: 'Group Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new group'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'O campo value não pode ser superior a 255 caracteres.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"id":10,"name":"b","description":"Eius et animi quos velit et.","owner":{"id":11,"name":"Scribe Doc User","email":"scribe@example.com","favorite_group_id":null,"created_at":"2025-10-16T19:15:36+00:00"},"created_at":"2025-10-16T19:32:32+00:00"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/groups/{id}'
    metadata:
      groupName: 'Group Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get a specific group's details"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"quas provident","description":"Nobis et consectetur sit odio. Sed quibusdam cupiditate voluptatem quis sed corrupti.","owner":{"id":1,"name":"Dr. Clarice Velasques Neto","email":"aparecida.dearruda@example.com","favorite_group_id":null,"created_at":"2025-10-16T19:15:36+00:00"},"created_at":"2025-10-16T19:15:36+00:00"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/groups/{id}'
    metadata:
      groupName: 'Group Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update a group's details"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'O campo value não pode ser superior a 255 caracteres.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses:
      -
        status: 403
        content: '{"status":403,"error":"Forbidden","data":{"message":"Voc\u00ea n\u00e3o tem permiss\u00e3o para executar esta a\u00e7\u00e3o."}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/groups/{id}'
    metadata:
      groupName: 'Group Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a group'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
