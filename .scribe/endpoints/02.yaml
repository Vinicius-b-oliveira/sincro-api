name: Transactions
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/transactions
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List transactions'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      group_id:
        name: group_id
        description: 'An optional ID of a group to filter transactions by.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      group_id: 1
    bodyParameters:
      group_id:
        name: group_id
        description: 'The <code>id</code> of an existing record in the groups table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      group_id: 16
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"status":422,"error":"Validation Failed","data":{"message":"O campo group id selecionado \u00e9 inv\u00e1lido.","errors":{"group_id":["O campo group id selecionado \u00e9 inv\u00e1lido."]}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/transactions
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new transaction'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_id:
        name: group_id
        description: 'The <code>id</code> of an existing record in the groups table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      title:
        name: title
        description: 'O campo value não pode ser superior a 255 caracteres.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      amount:
        name: amount
        description: 'O campo value deve ser pelo menos 0.01.'
        required: true
        example: 60
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: expense
        type: string
        enumValues:
          - income
          - expense
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_date:
        name: transaction_date
        description: 'O campo value deve ser uma data válida.'
        required: true
        example: '2025-10-16T19:32:32'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: b
      description: 'Eius et animi quos velit et.'
      amount: 60
      type: expense
      transaction_date: '2025-10-16T19:32:32'
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"data":{"id":205,"title":"b","description":"Eius et animi quos velit et.","amount":"60.00","type":"expense","transaction_date":"2025-10-16T19:32:32+00:00","created_at":"2025-10-16T19:32:32+00:00"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/transactions/{id}'
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific transaction'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction:
        name: transaction
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      transaction: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 403
        content: '{"status":403,"error":"Forbidden","data":{"message":"Voc\u00ea n\u00e3o tem permiss\u00e3o para executar esta a\u00e7\u00e3o."}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/transactions/{id}'
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a transaction'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction:
        name: transaction
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      transaction: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_id:
        name: group_id
        description: 'The <code>id</code> of an existing record in the groups table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      title:
        name: title
        description: 'O campo value não pode ser superior a 255 caracteres.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      amount:
        name: amount
        description: 'O campo value deve ser pelo menos 0.01.'
        required: true
        example: 60
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: expense
        type: string
        enumValues:
          - income
          - expense
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction_date:
        name: transaction_date
        description: 'O campo value deve ser uma data válida.'
        required: true
        example: '2025-10-16T19:32:32'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      title: b
      description: 'Eius et animi quos velit et.'
      amount: 60
      type: expense
      transaction_date: '2025-10-16T19:32:32'
    fileParameters: []
    responses:
      -
        status: 403
        content: '{"status":403,"error":"Forbidden","data":{"message":"Voc\u00ea n\u00e3o tem permiss\u00e3o para executar esta a\u00e7\u00e3o."}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/transactions/{id}'
    metadata:
      groupName: Transactions
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a transaction'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      transaction:
        name: transaction
        description: 'The ID of the transaction.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      transaction: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer scribe-dev-token-sincro-api-123456789'
    controller: null
    method: null
    route: null
    custom: []
